-- 1. FUNCTION TO CALCULATE FACTORIAL USING RECURSION
CREATE OR REPLACE FUNCTION F(N IN NUMBER)
RETURN NUMBER
IS
  FACT NUMBER := 1;
BEGIN
  IF N = 1 THEN
    FACT := 1;
  ELSE
    FACT := N * F(N - 1);
  END IF;
  RETURN FACT;
END;
/

-- Calling the factorial function
SELECT F(5) FROM DUAL;

-- Output: F(5) = 120


-- 2. FUNCTION TO COUNT TOTAL PROGRAMMERS
CREATE OR REPLACE FUNCTION FC
RETURN NUMBER
IS
  N NUMBER;
BEGIN
  SELECT COUNT(NAME) INTO N FROM PROGRAMMER;
  RETURN N;
END;
/

-- Calling the function to count programmers
SELECT FC FROM DUAL;

-- Output: FC = 14


-- 3. FUNCTION TO COUNT DISTINCT COURSES FROM STUDIES TABLE
CREATE OR REPLACE FUNCTION FC
RETURN NUMBER
IS
  N NUMBER;
BEGIN
  SELECT COUNT(DISTINCT(COURSE)) INTO N FROM STUDIES;
  RETURN N;
END;
/

-- Calling the function to count distinct courses
SELECT FC FROM DUAL;

-- Output: FC = 8


-- 4. CREATE STUDENT TABLE AND FUNCTION TO RETURN GRADE BASED ON MARKS
CREATE TABLE STUDENT
(
  ROLLNO NUMBER,
  NAME VARCHAR(15),
  MARKS NUMBER
);

-- Inserting data into STUDENT table
INSERT INTO STUDENT VALUES (1, 'TRUPTI', 81);
INSERT INTO STUDENT VALUES (2, 'PRIYANKA', 82);

-- Select students
SELECT * FROM STUDENT;

-- Function to determine grade based on marks
CREATE OR REPLACE FUNCTION F6(R IN STUDENT.ROLLNO%TYPE)
RETURN VARCHAR2
IS
  A VARCHAR2(20);
  M NUMBER(2);
BEGIN
  SELECT MARKS INTO M FROM STUDENT WHERE ROLLNO = R;
  A :=
    CASE
      WHEN (M < 35) THEN 'FAIL'
      WHEN (M >= 35 AND M < 60) THEN 'PASS'
      WHEN (M >= 60 AND M < 75) THEN 'FIRST CLASS'
      WHEN (M >= 75 AND M <= 100) THEN 'DISTINCTION'
    END;
  RETURN A;
END;
/

-- Calling the function to get grade
SELECT F6(1) FROM DUAL;

-- Output: F6(1) = 'DISTINCTION'


-- 5. FUNCTION TO CALCULATE AND UPDATE SALARY BASED ON CONDITIONS
-- (Eliminated due to potential logic issues in original code)


-- 6. FUNCTION TO RETURN EMPLOYEE NAME BASED ON EMPNO
CREATE OR REPLACE FUNCTION F2
RETURN VARCHAR2
IS
  EMP_NAME VARCHAR2(20);
BEGIN
  SELECT ENAME INTO EMP_NAME FROM SY_EMP_65 WHERE EMPNO = 7369;
  RETURN EMP_NAME;
END;
/

-- Output: SMITH
